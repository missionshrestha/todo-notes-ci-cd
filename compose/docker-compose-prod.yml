version: "3.9"

services:
  db:
    image: postgres:16

    env_file:
      - ../backend/.env.dev

    volumes:
      - prod_pgdata:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-notesuser} -d ${POSTGRES_DB:-notesdb}"]
      interval: 10s
      timeout: 5s
      retries: 12
    restart: unless-stopped

  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
      target: runtime            # CI can override to 'nuitka-runtime' for experiments

    env_file:
      - ../backend/.env.dev

    depends_on:
      db:
        condition: service_healthy

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python -c \"import urllib.request,sys;sys.exit(0 if urllib.request.urlopen('http://127.0.0.1:8000/api/health/').status==200 else 1)\""
        ]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 10s

    restart: unless-stopped

  # Built app served by nginx
  frontend:
    build:
      context: ..
      dockerfile: frontend/Dockerfile

    restart: unless-stopped

  # Public entrypoint
  reverse-proxy:
    build:
      context: ..
      dockerfile: reverse-proxy/Dockerfile

    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started

    ports:
      - "80:80"

    restart: unless-stopped

volumes:
  prod_pgdata:
